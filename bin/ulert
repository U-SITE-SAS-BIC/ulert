#!/usr/bin/env node



const { program } = require('commander');
const chalk = require('chalk');
const fs = require('fs');
const path = require('path');
const ora = require('ora').default;
const logSymbols = require('log-symbols');

const audit = require('../src/audit');
const reporter = require('../src/reporter');

// Definir paleta de colores reutilizable
const colors = {
  title: chalk.hex('#4db6ac').bold,           // turquesa suave
  label: chalk.gray,                           // gris neutro para etiquetas
  highlight: chalk.hex('#d9a441'),             // mostaza suave para valores importantes
  date: chalk.hex('#6a8a82'),                  // verde gris√°ceo suave para fechas
  spinner: chalk.hex('#5a8f7b'),                // verde apagado para spinner
  success: chalk.hex('#4caf50'),                 // verde musgo para mensajes de √©xito
  info: chalk.hex('#6a8a82'),                     // gris verdoso suave para info general
  link: chalk.hex('#4db6ac').underline,         // turquesa para links
  thanks: chalk.hex('#9575cd'),                   // lila suave para agradecimientos
  error: chalk.red                             // rojo para errores
};

program
  .name('ulert')
  .description('CLI para auditar la salud de un sitio web')
  .version('1.0.2');

program
  .command('audit')
  .description('Audita un sitio web')
  .argument('<url>', 'URL del sitio a auditar')
  .option('--json', 'Generar el informe en formato JSON')
  .option('-o, --output <archivo>', 'Ruta donde guardar el informe', './reports')
  .option('-l, --lang <codigo>', 'Idioma del informe HTML (es o en)', 'es')
  .action(async (url, opciones) => {
    try {
      if (!/^https?:\/\//i.test(url)) {
        url = `https://${url}`;
      }

      // Encabezado
      console.log(colors.label('######################################'));
      console.log();
      console.log(colors.title('üîç  Ulert ‚Äì Iniciando Auditor√≠a'));
      console.log(colors.label('üî≠  Objetivo:'), colors.highlight(url));
      console.log(colors.label('üìÖ  Fecha:'), colors.date(new Date().toLocaleString()));
      console.log(colors.label('-------------------------------------'));
      console.log();

      const spinner = ora(colors.spinner('Ejecutando auditor√≠a...')).start();

      const resultado = await audit(url);

      spinner.succeed(colors.success('Auditor√≠a completada, generando informe...'));

      reporter.cli(resultado, opciones.lang);

      const rutaSalida = path.resolve(opciones.output);
      const carpetaSalida = path.extname(rutaSalida)
        ? path.dirname(rutaSalida)
        : rutaSalida;

      if (!fs.existsSync(carpetaSalida)) {
        fs.mkdirSync(carpetaSalida, { recursive: true });
      }

      if (opciones.json) {
        const archivo = path.extname(rutaSalida)
          ? rutaSalida
          : path.join(rutaSalida, 'report.json');
        await reporter.json(resultado, archivo);
        console.log(colors.info(`üíæ Informe JSON guardado en: ${archivo}`));
      } else {
        const archivo = path.extname(rutaSalida)
          ? rutaSalida
          : path.join(rutaSalida, 'report.html');
        await reporter.html(resultado, archivo, opciones.lang);
        console.log(colors.info(`üíæ Informe HTML guardado en: ${archivo} (${opciones.lang})`));
      }

      // Mensaje final
      console.log();
      console.log(colors.success.bold('üìä  Auditor√≠a completada con √©xito.'));
      console.log(colors.label('-------------------------------------'));
      console.log(colors.label('üåê  M√°s informaci√≥n en:'), colors.link('https://ulert.u-site.app'));
      console.log(colors.thanks('‚ú®  Gracias por usar Ulert'));
      console.log();
      console.log(colors.label('######################################'));

    } catch (error) {
      console.error(logSymbols.error, colors.error(`Error: ${error.message}`));
      process.exit(1);
    }
  });

program
  .command('labs', 'Accede a funciones experimentales de Ulert Labs');

program.parse(process.argv);
